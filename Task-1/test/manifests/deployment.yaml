apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: postgres
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
      annotations:
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: "postgres-app"
        vault.hashicorp.com/agent-inject-secret-database-config.txt: "internal/data/database/config"
        vault.hashicorp.com/agent-inject-template-database-config.txt: |
          {{- with secret "internal/data/database/config" -}}
          export POSTGRES_USER="{{ .Data.data.POSTGRES_USER }}"
          export POSTGRES_PASSWORD="{{ .Data.data.POSTGRES_PASSWORD }}"
          export POSTGRES_DB="{{ .Data.data.POSTGRES_DB }}"
          {{- end -}}
    spec:
      serviceAccountName: postgres-app
      containers:
        - name: postgres-db
          image: postgres:14
          command: ["/bin/sh"]
          args:
            ['-c', 'source /vault/secrets/database-config && env > /vault/secrets/db && tail -f /dev/null']
          imagePullPolicy: "Always"
          ports:
            - name: postgres-port
              containerPort: 5432
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgresdb
      volumes:
        - name: postgresdb
          persistentVolumeClaim:
            claimName: postgres-pvc
